version: 2
jobs:
  build:
    working_directory: ~/test-repo
    docker:
      - image: cimg/ruby:2.7.3-node
    environment:
      BUNDLE_PATH: ~/repo/vendor/bundle 
    steps:
      - checkout
      - restore_cache:
          keys:
            - rubygems-v1-{{ checksum "Gemfile.lock" }}
            - rubygems-v1-fallback
      - run: sudo apt-get update 
      - run:
          name: Installing Ruby dependencies.
          command: |
                gem update --system
                gem install bundler   
      - run:
          name: Bundle installation.
          command: bundle check || bundle install
      - save_cache:
          key: rubygems-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Jekyll build to resolve " { % include }" directives.
          command: |
                echo "Compiling static files with JEKYLL"
                bundle exec jekyll build
      - run:
          name: Place CNAME
          command: |
                echo "Placing custom domain name"
                echo "doctest.frdy.io" > _site/CNAME # Update with preview.developer.concur.com when going live

      - persist_to_workspace:
          root: ./
          paths:
            - _site
  deploy:
    docker:
      - image: node:8.10.0
    steps:
      - checkout 
      - attach_workspace:
          at: ./
      - run:
          name: Disable Jekyll builds.
          command: touch ./_site/.nojekyll
      - run:
          name: Install and configure dependencies.
          command: | 
                npm install -g --silent gh-pages@2.0.1
                git config user.email "ownyookwon2@gmail.com"
                git config user.name "kwon234"
      - run:
          name: Deploy docs to gh-pages branch.
          command: gh-pages --dotfiles --message "[skip ci] Updates" --dist ./_site
      - add_ssh_keys:
          fingerprints:
            - 5a:c7:12:8e:d9:74:2b:9c:c8:cb:ae:1c:0b:f3:21:65
workflows:         
  version: 2
  test-deploy:
    jobs:
      - build:
          filters:
            branches:
              only: main
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: main
